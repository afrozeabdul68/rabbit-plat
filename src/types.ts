export type Maybe<T> = T | null;

/** Autogenerated input type of AddPaymentMethod */
export interface AddPaymentMethodInput {
  cardToken: string;

  default?: Maybe<boolean>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;
}
/** Autogenerated input type of InitializePhoneNumber */
export interface InitializePhoneNumberInput {
  countryCode: string;

  phoneNumber: string;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;
}
/** Autogenerated input type of PurchasePowerBank */
export interface PurchasePowerBankInput {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;
}
/** Autogenerated input type of RemovePaymentMethod */
export interface RemovePaymentMethodInput {
  paymentMethodId: string;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;
}
/** Autogenerated input type of RentPowerBank */
export interface RentPowerBankInput {
  powerstationId: string;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;
}
/** Autogenerated input type of SubmitPromoCode */
export interface SubmitPromoCodeInput {
  promoCode: string;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;
}
/** Autogenerated input type of UpdateProfile */
export interface UpdateProfileInput {
  userProfileAttributes: UserProfileAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;
}
/** Attributes for updating a user */
export interface UserProfileAttributes {
  /** User's Full Name */
  fullName?: Maybe<string>;
  /** User's Email Address */
  email?: Maybe<string>;
  /** Complete Phone Number */
  phoneNumber?: Maybe<string>;
  /** Allow In-App Notifications */
  appNotifications?: Maybe<boolean>;
  /** Allow Low Battery Notifications */
  lowBatteryNotifications?: Maybe<boolean>;
}
/** Autogenerated input type of ValidateTotpAndAuthenticatePhone */
export interface ValidateTotpAndAuthenticatePhoneInput {
  code: string;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;
}

export enum AccountBalanceEntryTypeEnum {
  Credit = "credit",
  Debit = "debit"
}

export enum TotpCodeStatusEnum {
  Valid = "valid",
  Invalid = "invalid",
  Expired = "expired"
}

/** An ISO 8601-encoded datetime */
export type Iso8601DateTime = any;

// ====================================================
// Documents
// ====================================================

export namespace ValidateTotpAndAuthenticatePhoneInput {
  export type Variables = {
    code: string;
  };

  export type Mutation = {
    __typename?: "Mutation";

    validateTotpAndAuthenticatePhone: ValidateTotpAndAuthenticatePhone;
  };

  export type ValidateTotpAndAuthenticatePhone = {
    __typename?: "AuthResponse";

    codeStatus: TotpCodeStatusEnum;

    jwt: Maybe<string>;

    user: Maybe<User>;
  };

  export type User = {
    __typename?: "User";

    email: string;

    fullName: string;

    phone: Maybe<Phone>;
  };

  export type Phone = {
    __typename?: "Phone";

    countryCode: string;

    phoneNumber: string;
  };
}

export namespace CurrentUserLocationsQuery {
  export type Variables = {
    lat: string;
    lng: string;
    radius: number;
  };

  export type Query = {
    __typename?: "Query";

    currentUser: Maybe<CurrentUser>;
  };

  export type CurrentUser = {
    __typename?: "User";

    nearbyLocations: NearbyLocations[];
  };

  export type NearbyLocations = {
    __typename?: "Location";

    name: string;

    powerStations: PowerStations[];

    address: Maybe<Address>;
  };

  export type PowerStations = {
    __typename?: "PowerStation";

    unitId: string;

    placement: Maybe<string>;
  };

  export type Address = {
    __typename?: "Address";

    street1: Maybe<string>;

    locality: Maybe<string>;

    region: Maybe<string>;

    postalCode: Maybe<number>;

    lat: Maybe<string>;

    lng: Maybe<string>;
  };
}

export namespace AnonymousMutation_1 {
  export type Variables = {
    input: UpdateProfileInput;
  };

  export type Mutation = {
    __typename?: "Mutation";

    updateProfile: Maybe<UpdateProfile>;
  };

  export type UpdateProfile = {
    __typename?: "UpdateProfilePayload";

    user: Maybe<User>;
  };

  export type User = {
    __typename?: "User";

    id: number;

    email: string;

    fullName: string;

    firstName: string;

    lastName: string;

    phone: Maybe<Phone>;
  };

  export type Phone = {
    __typename?: "Phone";

    countryCode: string;

    phoneNumber: string;
  };
}

export namespace ProfileQuery {
  export type Variables = {};

  export type Query = {
    __typename?: "Query";

    currentUser: Maybe<CurrentUser>;
  };

  export type CurrentUser = {
    __typename?: "User";

    fullName: string;

    email: string;

    phone: Maybe<Phone>;
  };

  export type Phone = {
    __typename?: "Phone";

    phoneNumber: string;
  };
}

export namespace InitializePhoneNumberInput {
  export type Variables = {
    countryCode: string;
    phoneNumber: string;
  };

  export type Mutation = {
    __typename?: "Mutation";

    initializePhoneNumber: InitializePhoneNumber;
  };

  export type InitializePhoneNumber = {
    __typename?: "InitializePhoneNumberPayload";

    errors: string;

    success: boolean;

    totpLength: number;
  };
}

// ====================================================
// Scalars
// ====================================================

// ====================================================
// Types
// ====================================================

export interface Query {
  /** App level options for how much a customer can reload their card balance and any volume discounts offered */
  balanceReloadOptions: BalanceReloadOption[];

  currentAdmin?: Maybe<AdminUser>;

  currentMerchant?: Maybe<MerchantUser>;

  currentUser?: Maybe<User>;

  errorMessage?: Maybe<string>;
  /** Loads a Single Location - Required Authenticated User */
  location?: Maybe<Location>;
  /** Validates if a user can rent a power bank */
  powerBankValidation?: Maybe<PowerBankRentalConfirmation>;

  success?: Maybe<boolean>;
  /** Loads a Single Transaction - Required Authenticated User */
  userTransaction?: Maybe<UserTransaction>;
}

export interface BalanceReloadOption {
  amount: number;

  bonus: string;

  label: string;

  position: number;
}

export interface AdminUser {
  accountBalance: number;

  activeRental?: Maybe<UserTransaction>;

  address?: Maybe<Address>;

  appNotifications: boolean;

  completedTransactions: UserTransaction[];

  email: string;

  errorMessage?: Maybe<string>;

  firstName: string;

  fullName: string;

  id: number;

  lastName: string;

  lowBatteryNotifications: boolean;

  nearbyLocations: Location[];

  paymentMethods: UserPaymentMethod[];

  phone?: Maybe<Phone>;

  success?: Maybe<boolean>;
}

export interface UserTransaction {
  date: string;

  displayType: string;

  errorMessage?: Maybe<string>;

  id: number;

  powerBankAssignment?: Maybe<PowerBankAssignment>;

  powerBankPurchase?: Maybe<PowerBankPurchase>;

  success?: Maybe<boolean>;

  userAccountBalanceEntry?: Maybe<AccountBalanceEntry>;

  userAccountBalanceEntryCredit?: Maybe<AccountBalanceEntry>;

  userAccountBalanceEntryDebit?: Maybe<AccountBalanceEntry>;
}

export interface PowerBankAssignment {
  dispensedAt?: Maybe<Iso8601DateTime>;

  dispensedFrom: PowerStation;

  errorMessage?: Maybe<string>;

  failureReason?: Maybe<string>;

  id: number;

  requestedAt: Iso8601DateTime;

  returnedAt?: Maybe<Iso8601DateTime>;

  returnedTo?: Maybe<PowerStation>;

  success: boolean;
}

export interface PowerStation {
  banksAvailable: number;

  banksCharging: number;

  banksEmpty: number;

  errorMessage?: Maybe<string>;

  id: number;

  placement?: Maybe<string>;

  rentalRate: number;

  success?: Maybe<boolean>;

  unitId: string;
}

export interface PowerBankPurchase {
  brand?: Maybe<string>;

  errorMessage?: Maybe<string>;

  id: number;

  lastFour?: Maybe<string>;

  success?: Maybe<boolean>;
}

export interface AccountBalanceEntry {
  amount: number;

  entryType: AccountBalanceEntryTypeEnum;

  errorMessage?: Maybe<string>;

  id: number;

  success?: Maybe<boolean>;
}

export interface Address {
  country?: Maybe<string>;

  errorMessage?: Maybe<string>;

  id: number;

  lat?: Maybe<string>;

  lng?: Maybe<string>;

  locality?: Maybe<string>;

  postalCode?: Maybe<number>;

  region?: Maybe<string>;

  street1?: Maybe<string>;

  street2?: Maybe<string>;

  success?: Maybe<boolean>;
}

export interface Location {
  address?: Maybe<Address>;

  id: number;

  name: string;

  open: boolean;

  powerStations: PowerStation[];
}

export interface UserPaymentMethod {
  brand: string;

  country: string;

  errorMessage?: Maybe<string>;

  expMonth: number;

  expYear: number;

  id: string;

  last4: string;

  success?: Maybe<boolean>;
}

export interface Phone {
  countryCode: string;

  errorMessage?: Maybe<string>;

  id: number;

  phoneNumber: string;

  success?: Maybe<boolean>;
}

export interface MerchantUser {
  errorMessage?: Maybe<string>;

  merchant?: Maybe<Merchant>;

  success?: Maybe<boolean>;
}

export interface Merchant {
  errorMessage?: Maybe<string>;

  name: string;

  success?: Maybe<boolean>;
}

export interface User {
  accountBalance: number;

  activeRental?: Maybe<UserTransaction>;

  address?: Maybe<Address>;

  appNotifications: boolean;

  completedTransactions: UserTransaction[];

  email: string;

  errorMessage?: Maybe<string>;

  firstName: string;

  fullName: string;

  id: number;

  lastName: string;

  lowBatteryNotifications: boolean;

  nearbyLocations: Location[];

  paymentMethods: UserPaymentMethod[];

  phone?: Maybe<Phone>;

  success?: Maybe<boolean>;
}

export interface PowerBankRentalConfirmation {
  datetime: string;

  errorMessage?: Maybe<string>;

  location: Location;

  maxDailyRate?: Maybe<number>;

  powerBankStationName?: Maybe<string>;

  purchasePrice?: Maybe<number>;

  quantityAvailable: number;

  rate?: Maybe<number>;

  requiresPayment: boolean;

  success?: Maybe<boolean>;
}

export interface Mutation {
  addPaymentMethod?: Maybe<AddPaymentMethodPayload>;

  errorMessage?: Maybe<string>;

  initializePhoneNumber: InitializePhoneNumberPayload;

  purchasePowerBank?: Maybe<PurchasePowerBankPayload>;

  removePaymentMethod?: Maybe<RemovePaymentMethodPayload>;

  rentPowerBank?: Maybe<RentPowerBankPayload>;

  submitPromoCode?: Maybe<SubmitPromoCodePayload>;

  success?: Maybe<boolean>;

  updateProfile?: Maybe<UpdateProfilePayload>;

  validateTotpAndAuthenticatePhone: AuthResponse;
}

/** Autogenerated return type of AddPaymentMethod */
export interface AddPaymentMethodPayload {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;

  errorMessage?: Maybe<string>;

  success?: Maybe<boolean>;

  user?: Maybe<User>;
}

/** Autogenerated return type of InitializePhoneNumber */
export interface InitializePhoneNumberPayload {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;

  errorMessage?: Maybe<string>;

  errors: string;

  success: boolean;

  totpLength: number;
}

/** Autogenerated return type of PurchasePowerBank */
export interface PurchasePowerBankPayload {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;

  errorMessage?: Maybe<string>;

  success?: Maybe<boolean>;

  userTransaction?: Maybe<UserTransaction>;
}

/** Autogenerated return type of RemovePaymentMethod */
export interface RemovePaymentMethodPayload {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;

  errorMessage?: Maybe<string>;

  success?: Maybe<boolean>;

  user?: Maybe<User>;
}

/** Autogenerated return type of RentPowerBank */
export interface RentPowerBankPayload {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;

  errorMessage?: Maybe<string>;

  success?: Maybe<boolean>;

  userTransaction: UserTransaction;
}

/** Autogenerated return type of SubmitPromoCode */
export interface SubmitPromoCodePayload {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;

  errorMessage?: Maybe<string>;

  response?: Maybe<BaseObject>;

  success?: Maybe<boolean>;
}

export interface BaseObject {
  errorMessage?: Maybe<string>;

  success?: Maybe<boolean>;
}

/** Autogenerated return type of UpdateProfile */
export interface UpdateProfilePayload {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<string>;

  errorMessage?: Maybe<string>;

  success?: Maybe<boolean>;

  user?: Maybe<User>;
}

export interface AuthResponse {
  codeStatus: TotpCodeStatusEnum;

  errorMessage?: Maybe<string>;

  jwt?: Maybe<string>;

  success?: Maybe<boolean>;

  user?: Maybe<User>;
}

// ====================================================
// Arguments
// ====================================================

export interface LocationQueryArgs {
  locationId: number;
}
export interface PowerBankValidationQueryArgs {
  powerstationId: string;
}
export interface UserTransactionQueryArgs {
  userTransactionId: number;
}
export interface NearbyLocationsAdminUserArgs {
  lat: string;

  lng: string;

  radius?: Maybe<number>;
}
export interface NearbyLocationsUserArgs {
  lat: string;

  lng: string;

  radius?: Maybe<number>;
}
export interface AddPaymentMethodMutationArgs {
  input: AddPaymentMethodInput;
}
export interface InitializePhoneNumberMutationArgs {
  input: InitializePhoneNumberInput;
}
export interface PurchasePowerBankMutationArgs {
  input: PurchasePowerBankInput;
}
export interface RemovePaymentMethodMutationArgs {
  input: RemovePaymentMethodInput;
}
export interface RentPowerBankMutationArgs {
  input: RentPowerBankInput;
}
export interface SubmitPromoCodeMutationArgs {
  input: SubmitPromoCodeInput;
}
export interface UpdateProfileMutationArgs {
  input: UpdateProfileInput;
}
export interface ValidateTotpAndAuthenticatePhoneMutationArgs {
  input: ValidateTotpAndAuthenticatePhoneInput;
}
